
@model QueryBuilderMVC.Models.ConnectionViewModel

@using (Html.BeginForm())
{
    @Html.ValidationSummary();

    <div>
        @Html.LabelFor(model => model.ConnectionName)
        <div>
            @Html.EditorFor(x => x.ConnectionName )
        </div>
    </div>
    <div>
        @Html.LabelFor(model => model.ServerName)
        <div>
            @*@Html.LabelFor(model => model.ServerName)*@
            @if (Model.ConnectionCount > 0)
            {
                <div>
                    @Html.TextBoxFor(x => x.ServerName, new { disabled = "disabled", placehoder = Model.ServerName })
                    <p class="TextField" style="display:none;">
                        Database: @Html.TextBoxFor(x => x.ServerName,
                    new { placeholder = Model.ServerName })
                    </p>
                </div>
            }
            else
            {
                <div>
                    @Html.EditorFor(x => x.ServerName)
                </div>
            }
        </div>
    </div>
    <div>
        @Html.LabelFor(model => model.LoginDB)
        <div>
            @Html.EditorFor(x => x.LoginDB)
        </div>
    </div>
    <div>
        @Html.LabelFor(model => model.PasswordDB)
        <div>
            @Html.EditorFor(x => x.PasswordDB)
        </div>
    </div>
    <div>
        @Html.LabelFor(model => model.DatabaseName)
        <div>
            @Html.EditorFor(x => x.DatabaseName)
        </div>
    </div>
    <p class="TextField" style="display:none;">
        Database: @Html.TextBoxFor(x => x.ConnectionOwner,
       new { placeholder = Model.ConnectionOwner })
    </p>
    <p class="TextField" style="display:none;">
        Database: @Html.TextBoxFor(x => x.ConnectionID,
       new { placeholder = Model.ConnectionID })
    </p>
}
<script>
        $('.ui-dialog-buttonset button').addClass("ui-button ui-corner-all ui-widget button-modal");
        $('.ui-dialog-buttonset button').css('width', 70);
        $('.ui-dialog-buttonset button').css('height', 30);
</script>